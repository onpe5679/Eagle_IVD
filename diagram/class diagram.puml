@startuml
skinparam classAttributeIconSize 0
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
}

title Eagle IVD - 시스템 구조도

package "Core Modules" {
    class "main.js" as Main {
        + onPluginCreate()
        + onPluginRun()
        + initializeUI()
        + registerEventHandlers()
        - setupMaintenanceHandlers()
        - loadModules()
    }

    class "subscription-manager.js" as SubManager {
        - pluginPath: string
        - subscriptions: Array
        - isChecking: boolean
        - downloadManager: DownloadManager
        - checker: SubscriptionChecker
        - importer: SubscriptionImporter
        - prefixUploadDate: boolean
        + initialize()
        + addSubscription()
        + removeSubscription()
        + checkAllSubscriptions()
        + startAutoCheck()
        + stopAutoCheck()
        + getChannelId()
        + addChannelSubscription()
    }

    class "subscription-checker.js" as SubChecker {
        - downloadManager: DownloadManager
        - updateUI: Function
        - importer: SubscriptionImporter
        + checkAllSubscriptions()
        + checkSubscription()
        - processInBatches()
        - importAndRemoveDownloadedFiles()
    }

    class "subscription-importer.js" as SubImporter {
        - updateUI: Function
        - prefixUploadDate: boolean
        + importAndRemoveDownloadedFiles()
        - createFolder()
        - importToEagle()
    }

    class "download-manager.js" as DLManager {
        - ytdlpPath: string
        - downloadFolder: string
        + initialize()
        + getMetadata()
        + getPlaylistMetadata()
        + startDownload()
        + cancel()
        - executeYtDlp()
        - parseOutput()
    }

    class "library-maintenance.js" as LibMaint {
        - pluginPath: string
        - isRunning: boolean
        - stats: MaintenanceStats
        + checkDuplicates()
        + checkConsistency()
        + fixInconsistencies()
        + removeInconsistenciesFromDB()
        - resolveDuplicate()
        - mergeMetadata()
    }

    class "ui-controller.js" as UIController {
        + updateMaintenanceUI()
        + updateStatusUI()
        + updateProgressUI()
        + showError()
        + appendLog()
        + showConfirmDialog()
        + updateSubscriptionListUI()
        + showTab()
        + showReportDialog()
    }

    class "eagle-api.js" as EagleAPI {
        + item: ItemAPI
        + folder: FolderAPI
        + isDuplicateItem()
        + createOrFindFolder()
        + updateItemFolders()
        + updateItemTags()
    }
}

package "Database" {
    class "subscription-db.js" as SubDB {
        - db: SQLite.Database
        + initDatabase()
        + getAllPlaylists()
        + getPlaylistByUrl()
        + addPlaylist()
        + updatePlaylist()
        + deletePlaylist()
        + getVideosByPlaylist()
        + addVideo()
        + updateVideo()
        + getAllVideoIds()
        + deleteVideoByVideoId()
        + getVideosByVideoId()
        + markVideoAsEagleLinked()
    }

    class "SQLite Database" as SQLiteDB {
        + playlists
        + videos
    }
}

package "Data Objects" {
    class Subscription {
        + id: number
        + url: string
        + folderName: string
        + format: string
        + quality: string
        + videoIds: Array
        + title: string
        + lastCheck: number
        + autoDownload: boolean
        + skip: boolean
    }

    class Video {
        + id: number
        + playlist_id: number
        + video_id: string
        + title: string
        + status: string
        + downloaded: boolean
        + auto_download: boolean
        + skip: boolean
        + eagle_linked: boolean
    }

    class MaintenanceStats {
        + duplicatesFound: number
        + duplicatesResolved: number
        + inconsistenciesFound: number
        + errors: Array
    }

    interface ItemAPI {
        + get(query)
        + getById(id)
        + addFromPath(path, metadata)
        + moveToTrash(id)
        + modify(id, changes)
    }

    interface FolderAPI {
        + get()
        + create(data)
        + modify(id, changes)
    }
}

package "External Services" {
    class "Eagle App" as Eagle {
        + item
        + folder
        + library
    }

    class "yt-dlp" as YtDlp {
        + download
        + extract-info
    }
}

package "User Interface" {
    class "index.html" as UI {
        + singleTab
        + playlistTab
        + subscriptionTab
        + maintenanceTab
        + settingsTab
    }
}

' 의존성 관계
Main --> SubManager: creates & manages
Main --> LibMaint: creates & manages
Main --> UIController: creates & manages
Main --> DLManager: creates & manages

SubManager --> DLManager: uses
SubManager --> SubChecker: uses
SubManager --> SubImporter: uses
SubManager --> SubDB: uses
SubManager --> EagleAPI: uses
SubManager --> Subscription: manages

SubChecker --> DLManager: uses
SubChecker --> SubImporter: uses

SubImporter --> EagleAPI: uses

DLManager ..> YtDlp: executes
LibMaint --> EagleAPI: uses
LibMaint --> SubDB: uses
LibMaint --> MaintenanceStats: manages

EagleAPI ..> Eagle: interfaces with

SubDB --> SQLiteDB: manages
SQLiteDB --> Subscription: stores
SQLiteDB --> Video: stores

UI --> Main: interacts
UIController --> UI: updates
UIController --> SubManager: triggers actions
UIController --> LibMaint: triggers maintenance

' 이벤트 흐름
SubManager ..> UIController: emits events
LibMaint ..> UIController: emits events
DLManager ..> UIController: emits progress

@enduml